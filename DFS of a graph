class Solution {
    // Function to return a list containing the DFS traversal of the graph.
     ArrayList<Integer> al = new ArrayList<>();
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        
        
       
        boolean visited [] = new boolean[V];
        for(int i=0; i<V;i++){
            
            if(visited[i] == false){
                DFS(adj,i,visited);
            }
            
        }
        
        return al;
    }
    
    void DFS(ArrayList<ArrayList<Integer>> adj, int s, boolean[] visited){
        
        visited[s] = true;
        al.add(s);
        
        for(int u : adj.get(s)){
            
            if(visited[u] == false){
                DFS(adj,u,visited);
            }
        }
        
    }
}
